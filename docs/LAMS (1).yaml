swagger: '2.0'
info:
  version: 0.0.0
  title: eGov LAMS (Leases And Agreements System)
  description: eGov LAMS manages the Lease data for immovable assets owned by a ULB. This module aim is to improve lease operations in ULB. This will gives a comprehensive details of agreements for immovable assets like Land, Shopping Complex, Market, Kalyanamandapam, etc.
  contact:
    name:  Ramakrishna (Ramki)
    email: ramakrishna@egovernments.org
host: phoenix-qa.egovernments.org
schemes:
  - https
basePath: '/v1/[API endpoint]'
paths:
  /agreements/_search:
    post:
      summary: Agreement List
      description: |
        Returns a list of `Agreement` for given different input params.
      parameters:
        - name: requestInfo
          in: body
          description: Request header for the service request details.
          required: true
          schema:
            $ref: '#/definitions/RequestInfo'
        - name: tenantId
          in: query
          description: Unique id for ulb.
          required: true
          type: string
          format: varchar
        - name: agreementId
          in: query
          description: Primary key of Agreement object.
          required: false
          type: string
          format: varchar
        - name: agreementNumber
          in: query
          description: Agreement number.
          required: false
          type: string
          format: varchar
        - name: tenderNumber
          in: query
          description: Tender number for which asset is auctioned.
          required: false
          type: string
          format: varchar
        - name: fromDate
          in: query
          description: Agreement date, here search will happen as agreement date is greater or equal to given fromDate.
          required: false
          type: string
          format: varchar
        - name: toDate
          in: query
          description: Agreement date, here search will happen as agreement date is lesser or equal to given toDate.
          required: false
          type: string
          format: varchar
        - name: status
          in: query
          description: Agreement status.
          required: false
          type: string
          format: varchar
        - name: tinNumber
          in: query
          description: Tax Identification number.
          required: false
          type: string
          format: varchar
        - name: tradelicenseNumber
          in: query
          description: Trade License number of the trade going to continue in the asset.
          required: false
          type: string
          format: varchar
        - name: assetCategory
          in: query
          description: Asset category against which agreement made
          required: false
          type: string
          format: varchar
        - name: shoppingCommplexNo
          in: query
          description: Shopping complex number against which agreement made
          required: false
          type: string
          format: varchar
        - name: assetCode
          in: query
          description: Asset code against which agreement made
          required: false
          type: string
          format: varchar
        - name: locality
          in: query
          description: Locality boundary where the asset is located against which the agreement made.
          required: false
          type: string
          format: varchar
        - name: revenueWard
          in: query
          description: Revenue ward boundary where the asset is located against which the agreement made.
          required: false
          type: string
          format: varchar
        - name: electionWard
          in: query
          description: Election ward boundary where the asset is located against which the agreement made.
          required: false
          type: string
          format: varchar
        - name: doorno
          in: query
          description: Door no of a asset against which agreement made
          required: false
          type: string
          format: varchar
        - name: allotteeName
          in: query
          description: Name of allottee against whom the agreement made.
          required: false
          type: string
          format: varchar
        - name: mobileNumber
          in: query
          description: Contact number of allottee against whom the agreement made.
          required: false
          type: string
          format: varchar
        - name: offset
          in: query
          description: Offset value for a the page (in case of pagination on result)
          required: false
          type: string
          format: varchar
        - name: size
          in: query
          description: No.of agreement to be returned by API
          required: false
          type: string
          format: varchar
      tags:
        - Agreement
      responses:
        '200':
          description: returns list of agreements.
          schema:
            $ref: '#/definitions/AgreementResponse'
        '400':
          description: tenantId was not provided or General service error
          schema:
            $ref: '#/definitions/ErrorRes'
        '404':
          description: tenantId provided was not found
          schema:
            $ref: '#/definitions/ErrorRes'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorRes'
  /agreements/_create:
    post:
      description: Creates a new `Agreement` to lease a asset to `Allottee`.
      parameters:
        - name: agreement
          in: body
          description: Details for the new Agreement to lease a asset.
          required: true
          schema:
            $ref: '#/definitions/AgreementRequest'
        - name: tenantId
          in: query
          description: Unique id for tenant.
          required: true
          type: string
          format: varchar
      tags:
        - Agreement
      responses:
        '201':
          description: Agreement created
          schema:
            $ref: '#/definitions/AgreementResponse'
        '400':
          description: tenantId was not provided or General service error
          schema:
            $ref: '#/definitions/ErrorRes'
        '404':
          description: tenantId provided was not found
          schema:
            $ref: '#/definitions/ErrorRes'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorRes'
            
  /agreements/_update/{agreementId}:
    post:
      description: Updates a given `Agreement` with newer details.
      parameters:
        - name: tenantId
          in: query
          description: Unique id for ulb.
          required: true
          type: string
          format: varchar
        - name: agreementId
          in: path
          description: Unique service code for service to be updated .
          required: true
          type: string
          format: varchar
        - name: agreement
          in: body
          description: Request header for the agreement Request.
          required: true
          schema:
            $ref: '#/definitions/AgreementRequest'
      tags:
        - Agreement
      responses:
        '200':
          description: agreement updated
          schema:
            $ref: '#/definitions/AgreementResponse'
        '400':
          description: tenantId was not provided or General service error
          schema:
            $ref: '#/definitions/ErrorRes'
        '404':
          description: tenantId provided was not found
          schema:
            $ref: '#/definitions/ErrorRes'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorRes'

  /assets:
    get:
      summary: Asset list
      description: >
        Provides a list of assets for given different input params.
      parameters:
        - name: requestInfo
          in: body
          description: Request header for the service request details.
          required: true
          schema:
            $ref: '#/definitions/RequestInfo'
        - name: tenantId
          in: query
          description: Unique id for ulb.
          required: true
          type: string
          format: varchar
        - name: assetCode
          in: query
          description: Asset code
          required: false
          type: string
          format: varchar
        - name: assetName
          in: query
          description: Asset name.
          required: false
          type: string
          format: varchar
        - name: assetCategory
          in: query
          description: Cateogry of asset
          required: false
          type: string
          format: varchar
        - name: zone
          in: query
          description: Zone boundary where the asset residing
          required: false
          type: string
          format: varchar
        - name: ward
          in: query
          description: Ward boundary where the asset residing
          required: false
          type: string
          format: varchar
        - name: block
          in: query
          description: Block boundary where the asset residing
          required: false
          type: string
          format: varchar          
        - name: locality
          in: query
          description: Locality boundary where the asset residing
          required: false
          type: string
          format: varchar
        - name: electionWard
          in: query
          description: Election Ward boundary where the asset residing
          required: false
          type: string
          format: varchar
      tags:
        - Asset
      responses:
        '200':
          description: returns list of agreements.
          schema:
            $ref: '#/definitions/AssetResponse'
        '400':
          description: tenantId was not provided or General service error
          schema:
            $ref: '#/definitions/ErrorRes'
        '404':
          description: tenantId provided was not found
          schema:
            $ref: '#/definitions/ErrorRes'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorRes'

  /notice/{agreementId}:
    post:
      summary: Agreement notice
      description: >
        Generates a Agreement notice for a agreement.
      parameters:
        - name: requestInfo
          in: body
          description: Request header for the service request details.
          required: true
          schema:
            $ref: '#/definitions/RequestInfo'
        - name: tenantId
          in: query
          description: Unique id for ulb.
          required: true
          type: string
          format: varchar
        - name: agreementId
          in: path
          description: Unique service code for service to be updated .
          required: true
          type: string
      tags:
        - Agreement
      responses:
        '200':
          description: returns list of agreements.
          schema:
            $ref: '#/definitions/Notice'
        '400':
          description: tenantId was not provided or General service error
          schema:
            $ref: '#/definitions/ErrorRes'
        '404':
          description: tenantId provided was not found
          schema:
            $ref: '#/definitions/ErrorRes'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorRes'
            
definitions:
  Asset:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: unique id of the asset.
      category:
        type: string
        description: ULB Categorize assets into different categories
      name:
        type: string
        description: Name of the Asset
      doorNo:
        type: string
        description: Door no of the Asset
      code:
        type: string
        description: ULB assign unique code to each asset to find it out easily
      location:
        $ref: '#/definitions/Location'
    required:
      - category
      - name
      
  Location:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: unique id of the location.
      locality:
        type: string
        description: locality (a boundary in a ULB) which the asset belongs to
      street:
        type: string
        description: Street (a boundary in a ULB) which the asset belongs to
      zone:
        type: string
        description: Zone (a boundary in a ULB) which the asset belongs to
      ward:
        type: string
        description: Ward (a boundary in a ULB) which the asset belongs to
      block:
        type: string
        description: Block (a boundary in a ULB) which the asset belongs to
      electionward:
        type: string
        description: Election Ward (a boundary in a ULB) which the asset belongs to
        
  Allottee:
    type: object
    description: Allottee is a citizen with whom the agreement is done
    properties:
      id:
        type: integer
        format: int64
        description: unique id of the allotee.
      name:
        type: string
        description: Allotee name
      address:
        type: string
        description: Allottee address
      contactNumber:
        type: number
        description: Allottee contact number
      aadhaarNumber:
        type: string
        description: Allottee aadhaar number
      panNumber:
        type: string
        description: Allottee pan number
      emailid:
        type: string
        description: Allottee emailid
    required:
      - name
      - address
      - contactNumber
    
  Agreement:
    type: object
    description: This is a 
    properties:
      id:
        type: integer
        format: int64
        description: unique id of the agreement.
      agreementNumber:
        type: string
        description: unique agreement number.
        maxLength: 64
      agreementDate:
        type: string
        format: date
        description: date of agreement.
      allottee:
        $ref: '#/definitions/Allottee'                                                             
      asset:
        $ref: '#/definitions/Asset'
      tenderNumber:
        type: string
        description: Tender or Auction number.
        maxLength: 64
      tenderDate:
        type: string
        format: date
        description: Tender or Auction date.
      councilNumber:
        type: string
        description: Council or committee resolution number.
        maxLength: 64
      councilDate:
        type: string
        format: date
        description: Council or committee resolution date.
      bankGuaranteeAmount:
        type: number
        format: double
        description: Bank guarantee amount.
      bankGuaranteeDate:
        type: string
        format: date
        description: Bank guarantee date.
      securityDeposit:
        type: number
        format: double
        description: Security deposit.
      securityDepositDate:
        type: string
        format: date
        description: Security deposit date.
      status:
        type: string
        description: enumeration of agreement statuses.
        enum:
          - ACTIVE
          - CANCELED
          - EVICTED
          - RENEWED
          - WORKFLOW
      natureOfAllotment:
        type: string
        description: enumeration of nature of allotment.
        enum:
          - TENDER
          - DIRECT
          - AUCTION
      registrationFee:
        type: number
        format: double
        description: Registration fee for agreement
      caseNumber:
        type: string
        description: Case no.
        maxLength: 64
      commencementDate:
        type: string
        format: date
        description: Date of Commencement of Agreement.
      expiryDate:
        type: string
        format: date
        description: Date of expiry.
      orderDetails:
        type: string
        description: order details.
        maxLength: 256
      rent:
        type: number
        format: double
        description: rent to be paid per payment cycle.
      tradeLicenseNumber:
        type: string
        description: Trade license number assigned to the shop should be captured.
        maxLength: 64
      paymentCycle:
        type: string
        description: payment cycle on which the rent has to be paid against agreement.
        enum:
          - MONTH
          - QUARTER
          - HALFYEAR
          - ANNUAL
      rentIncrementMethod:
        $ref: '#/definitions/RentIncrementType'
      orderNumber:
        type: string
        description: order number.
        maxLength: 64
      orderDate:
        type: string
        format: date
        description: order date.
      rrReadingNumber:
        type: string
        description: Electiricty meter number.
        maxLength: 64
      remarks:
        type: string
        description: Comments.
        maxLength: 256
      solvencyCertificateNo:
        type: string
        description: solvency certificate no.
        maxLength: 64        
      solvencyCertificateDate:
        type: string
        format: date
        description: solvency certificate date.
      tinNumber:
        type: string
        description: Tin no.
        maxLength: 64
      documents:
        type: array
        items:
          $ref: '#/definitions/Document'
      stateId:
        type: string
        description: Work flow ref id.
    required:
      - id
      - agreementNumber
      - agreementDate
      - allottee
      - asset
      - status
      - natureOfAllotment
      - rent
      - paymentCycle
      - commencementDate
      
  RentIncrementType:
    type: object
    description: This object holds rent incement types. percentage or flat rates for a given asset category.
    properties:
      id:
        type: integer
        format: int64
        description: unique id of the RentIncrementType.
      type:
        type: string
        description: increment type
        maxLength: 64
      assetCategory:
        type: string
        description: asset category
      fromDate:
        type: string
        format: date
        description: fromdate
      toDate:
        type: string
        format: date
        description: todate
      percentage:
        type: string
        description: percentage value used for increase in rent
      flatAmount:
        type: string
        format: double
        description: fixed amount used for increase in rent
        
  ApplicationType:
    type: object
    description: This object holds type of different transactions allowed on a agreement.
    properties:
      id:
        type: integer
        format: int64
        description: unique id of the ApplicationType.
      name:
        type: string
        description: name of the transaction on agreement
      code:
        type: string
        description: code to identifiy transaction on agreement
        
  DocumentType:
    type: object
    description: This object holds type of documents to be uploaded during the transaction for each application type.
    properties:
      id:
        type: integer
        format: int64
        description: unique id of the ApplicationType.
      name:
        type: string
        description: name of the document
      application:
        $ref: '#/definitions/ApplicationType'
        
  Document:
    type: object
    description: This object holds list of documents attached during the transaciton for a agreement
    properties:
      id:
        type: integer
        format: int64
        description: unique id of the ApplicationType.
      documentType:
        $ref: '#/definitions/DocumentType'        
      agreement:
        type: integer
        format: int64
        description: unique id of the Agreement.
    
  AgreementRequest:
    properties:
      RequestInfo:
        $ref: '#/definitions/RequestInfo'
      Agreement:
        $ref: '#/definitions/Agreement'
    type: object

  AgreementResponse:
    properties:
      ResposneInfo:
        $ref: '#/definitions/ResponseInfo'
      Agreements:
        type: array
        items:
          $ref: '#/definitions/Agreement'
    type: object

  AssetResponse:
    properties:
      ResposneInfo:
        $ref: '#/definitions/ResponseInfo'
      Assets:
        type: array
        items:
          $ref: '#/definitions/Asset'
    type: object 

  Notice:
    properties:
      number:
        type: string
        description: notice number
      noticedata:
        type: string
        description: a byte stream for notice pdf.
        format: byte
    type: object 

  RequestInfo:
    type: object
    properties:
      apiId:
        type: string
        description: unique API ID
      ver:
        type: string
        description: API version
      ts:
        type: string
        description: >-
          response timestamp YYYY-MM-DDThh:mm:ss+/-nn:nn (timezone defaulted to
          +5.30)
      action:
        type: string
        description: api action like GET/POST/PUT/DELETE in case of http calls
      did:
        type: string
        description: device UUID from which API is called
      key:
        type: string
        description: API key (dynamic)
      msgId:
        type: string
        description: 'unique request message id, UUID, for handling API idempotency'
      requesterId:
        type: string
        description: UserId of the user calling
      authToken:
        type: string
        description: //session/jwt/saml token/oauth token
    required:
      - apiId
      - ver
      - ts
      
  ResponseInfo:
    type: object
    properties:
      apiId:
        type: string
        description: unique API ID
      ver:
        type: string
        description: API version
      ts:
        type: string
        description: >-
          response timestamp YYYY-MM-DDThh:mm:ss+/-nn:nn (timezone defaulted to
          +5.30)
      resMsgId:
        type: string
        description: unique response message id (UUID)
      msgId:
        type: string
        description: message id of the request
      status:
        type: string
        description: 'status of request e.g. successful, failed etc'
    required:
      - apiId
      - ver
      - ts
      - status
      
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      description:
        type: string
      filelds:
        type: object
    required:
      - code
      - message
      
  ErrorRes:
    properties:
      ResposneInfo:
        $ref: '#/definitions/ResponseInfo'
      Error:
        $ref: '#/definitions/Error'
    type: object
